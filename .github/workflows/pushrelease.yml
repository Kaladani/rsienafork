on:
  push:
    branches: 
      - main

name: Check and release

jobs:

  build:
    name: Build for ${{ matrix.config.os }} (${{ matrix.config.r }})
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest, r: 'release', artifact_name: '*.tar.gz', asset_name: macOS}
          - {os: windows-latest, r: 'release', artifact_name: '*.zip', asset_name: winOS}
          - {os: ubuntu-latest, r: 'release',  artifact_name: '*.tar.gz', asset_name: linuxOS}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      
    steps:
      - uses: actions/checkout@v4
        
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Install Mac dependencies
        if: runner.os == 'macOS'
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
          brew install autoconf
          brew install automake

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 2
          extra-packages: |
            any::rcmdcheck
            any::covr
            any::remotes
          needs: check

      - uses: r-lib/actions/check-r-package@v2
        env:
          _R_CHECK_FORCE_SUGGESTS_: false
        with:
          upload-snapshots: true

      - name: Binary
        run: |
          pkgbuild::clean_dll()
          binary <- pkgbuild::build(binary = TRUE, needs_compilation = TRUE, compile_attributes = TRUE)
          dir.create("build")
          file.copy(binary, "build")
        shell: Rscript {0}
    
      - name: Save binary artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.asset_name }}
          path: build/

  release:
    name: Bump version and release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout one
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Bump version and push tag
        id: newtag
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: main

      - name: Checkout two
        uses: actions/checkout@v4
    
      - name: Download binaries
        uses: actions/download-artifact@v4
        
      - name: Display structure of downloaded files
        run: ls -R

      - name: Rename binaries release
        shell: bash
        run: |
          mv ./macOS/*.tgz RSiena.tgz
          mv ./linuxOS/*.tar.gz RSiena.tar.gz
          mv ./winOS/*.zip RSiena.zip 
          echo "Renamed files"
          ls -R

      - name: Create Release and Upload Assets
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.newtag.outputs.tag }}
          name: Release ${{ steps.newtag.outputs.tag }}
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          # Specify the assets you want to upload
          files: |
            RSiena.tgz
            RSiena.tar.gz
            RSiena.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
